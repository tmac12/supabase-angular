import{Ha as g,Ob as o,P as c,Rb as f,V as h,i as n}from"./chunk-46NUIZ3Q.js";import{a as l,b as u,d as t}from"./chunk-PYQTE2ZK.js";var y=(()=>{let i=class i{constructor(){this.supabase=h(f),this.friendRequests=this.supabase.friendRequests,this.friendsSignal=g([]),this.friendsWithoutOwnerSignal=o(()=>this.friendsSignal().filter(e=>!e.isOwner)),this.friendsCount=o(()=>this.friendsWithoutOwnerSignal().length)}acceptFriendShip(e){return n(this.supabase.updateFriendShipStatus(e,"accepted"))}declineFriendShip(e){return n(this.supabase.updateFriendShipStatus(e,"declined"))}addFriend(e){return console.log("add friend"),n(this.supabase.updateFriend(e))}addFriendPromise(e){return t(this,null,function*(){return console.log("add friend"),yield this.supabase.updateFriend(e)})}getAllFriends(){return n(this.supabase.getAllFriends())}getAllFriendsPromise(e){return t(this,null,function*(){let{data:s,error:r}=yield this.supabase.getAllFriends();if(r){console.error(r),this.friendsSignal.set([]);return}if(s){console.log("Friends found");let p=s.map(d=>u(l({},d),{isOwner:d.owner_id===e}));this.friendsSignal.set(p)}else console.log("No friends found"),this.friendsSignal.set([])})}getAllOwnerFriends(){return n(this.supabase.getAllOwnerFriends())}getFriends(){return n(this.supabase.getFriends())}getFriendPromise(){return t(this,null,function*(){let{data:e,error:s}=yield this.supabase.getFriends();return s&&console.error(s),e})}addFriendByEmail(e){return t(this,null,function*(){if(yield this.supabase.userExistByEmail(e)){console.log("User exists");let r=yield this.supabase.addFriendByEmail(e);if(r.error)return console.error(r.error.message),!1;console.log("Friend added")}else{console.log("User does not exist");let r=yield this.inviteFriend(e);if(r.error)return console.error(r.error.message),!1;console.log("Friend invited")}return!0})}inviteFriend(e){return t(this,null,function*(){let s=yield this.addFriendPromise(e);return s.error?console.log(s.error.message):console.log("Friend invited"),s})}subscribeToFriendChanges(){console.log("subscribe to friend changes"),this.supabase.subscribeToFriendChanges()}unsubscribeFriendChanges(){console.log("unsubscribe friend changes"),this.supabase.unsubscribeFriendsChanges()}};i.\u0275fac=function(s){return new(s||i)},i.\u0275prov=c({token:i,factory:i.\u0275fac,providedIn:"root"});let a=i;return a})();export{y as a};
